.TH SIMPLE_SHELL 1 "January 13, 2025" "Your Organization" "General Commands Manual"
.SH NAME
.B simple_shell\fR \- A simple command interpreter.
.SH SYNOPSIS
.B ./simple_shell
.P
.B [command] [option]
.P
.B ./simple_shell\fR [options] [command] | file
.P
.B /bin/[command] [option]
.SH DESCRIPTION
.LP
.B simple_shell\fR is a lightweight UNIX command language interpreter capable of executing commands interactively from \fBSTDIN\fR or piped from a file.
Invocation
.P
simple_shell can be invoked both interactively and non-interactively. If simple_shell is invoked with standard input not connected to a terminal, it reads and executes received commands in order. If simple_shell is invoked with standard input connected to a terminal (determined by isatty(3)), an interactive shell is opened. When executing interactively, simple_shell displays the prompt `#(ಠ_ಠ)->$` when it is ready to read a command.
Alternatively, if command line arguments are supplied upon invocation, simple_shell treats the first argument as a file from which to read commands. The supplied file should contain one command per line. simple_shell runs each of the commands contained in the file in order before exiting.
Environment
.P
Upon invocation, simple_shell receives and copies the environment of the parent process in which it was executed. This environment is an array of name-value strings describing variables in the format NAME=VALUE.
Command Execution
.P
After receiving a command, simple_shell tokenizes it into words using " " as a delimiter. The first word is considered the command, and all remaining words are considered arguments to that command. simple_shell then proceeds with the following actions:
.P
1. If the first character of the command is neither a slash (\) nor dot (.), the shell searches for it in the list of shell built-ins. If there exists a shell built-in by that name, the built-in is invoked.
.P
2. If the first character of the command is none of a slash (\), dot (.), nor built-in, simple_shell searches each element of the PATH environmental variable for a directory containing an executable file by that name.
.P
3. If the first character of the command is a slash (\) or dot (.) or either of the above searches was successful, the shell executes the named program with any remaining arguments given in a separate execution environment.
Exit Status
.P
simple_shell returns the exit status of the last command executed, unless a syntax error occurs, with zero indicating success and non-zero indicating failure. All built-ins return zero on success and one or two on incorrect usage (indicated by a corresponding error message).
.B Signals
.in +2n
While running in interactive mode, simple_shell ignores the keyboard input \fBCtrl+C\fR. Alternatively, an input of end-of-file (\fBCtrl+D\fR) will exit the program.
.in
.TP
.B Built-in commands
.TP
.BR env
Lists all environment variables.
.TP
.BR setenv " " [name] " " [value]
Sets the "name" environment variable to "value" or updates it if it already exists.
.TP
.BR unsetenv " " [name]
Deletes the "name" environment variable from the environment variables.
.TP
.BR cd " " [dir_path]
Changes the current working directory to "dir_path".
.TP
.BR exit
Exits the shell.
.SH EXAMPLES
.B Interactive
.P
       $ ./simple_shell
       #(ಠ_ಠ)->$ /bin/ls
       file1.c file2.c shell.c
       #(ಠ_ಠ)->$
       #(ಠ_ಠ)->$ exit
       $
.B Non-Interactive
.P
       $ echo "/bin/ls" | ./simple_shell
       file1.c file2.c shell.c
       $
       $ cat test_commands | ./simple_shell
       file1.c file2.c shell.c
       $
.SH AUTHORS
.P
Abderrhamane 
Aurelien